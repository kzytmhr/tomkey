#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt { flavor = "tap-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W     &kp E     &kp R                  &kp T                                         &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LEFT_CONTROL A  &kp S     &kp D     &kp F                  &kp G        &trans            &trans         &kp H        &kp J  &kp K      &kp L    &mt RIGHT_ALT MINUS
&mt LSHIFT Z        &kp X     &kp C     &kp V                  &kp B        &trans            &kp B          &kp N        &kp M  &kp COMMA  &kp DOT  &mt RSHIFT SLASH
&lt 2 LEFT_ALT      &mkp MB2  &mkp MB1  &mt RIGHT_CONTROL TAB  &lt 5 SPACE  &kp LEFT_WIN      &kp BACKSPACE  &lt 4 ENTER                             &lt 3 RIGHT_ALT
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans        &trans            &trans          &trans                      &trans  &trans    &trans    &trans    &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_BLE  &out OUT_USB                       &trans    &kp HOME     &kp END        &kp CARET  &kp DOLLAR
&trans        &trans        &trans        &trans        &trans        &trans      &trans   &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &kp LC(RIGHT_BRACKET)
&trans        &trans        &trans        &trans        &trans        &trans      &trans   &trans    &kp PAGE_UP  &kp PAGE_DOWN  &trans     &trans
&trans        &trans        &trans        &trans        &kp LSHFT     &trans      &kp DEL  &kp ESC                                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp GRAVE  &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp NUMBER_9             &kp NUMBER_0                           &trans  &kp RC(LEFT_ARROW)  &kp UP_ARROW      &kp RC(RIGHT_ARROW)  &kp LG(P)
&kp TAB    &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans      &trans  &trans  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LG(K)
&kp LCMD   &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans      &trans  &trans  &trans              &kp LC(UP_ARROW)  &trans               &kp LG(L)
&trans     &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans      &trans  &trans                                                             &trans
            >;
        };

        NUM {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                            &trans        &kp PLUS      &kp MINUS     &kp AMPS      &kp PIPE
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F10       &kp F11       &kp F12       &trans        &trans        &trans      &trans  &kp EQUAL     &kp ASTERISK  &kp PERCENT   &trans        &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                  &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp EXCL   &kp LBKT              &kp RBKT               &kp TILDE  &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp AT     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI   &kp COLON
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp POUND  &kp LBRC              &kp RBRC               &kp SQT    &kp DQT
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                             &kp GRAVE
            >;
        };

        layer_6 {
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &trans                      &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &trans  &trans      &trans  &trans      &trans      &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans  &trans      &trans  &trans      &trans      &trans        &trans        &trans
&trans         &trans     &trans     &trans     &trans  &trans      &trans  &trans                                              &trans
            >;
        };
    };
};
